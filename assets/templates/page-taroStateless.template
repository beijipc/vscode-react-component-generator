import React, {useEffect, useState} from {quotes}react{quotes};
import Taro, { useDidShow, useDidHide, usePullDownRefresh, useReachBottom, useShareAppMessage, useShareTimeline, useRouter } from {quotes}@tarojs/taro{quotes};
import { View, Text } from {quotes}@tarojs/components{quotes};
import styles from {quotes}./{stylesheetName}{quotes};

type RouterParams = Taro.RouterInfo['params'] & {
  id?: string; // 一些params的类型声明
}

const {componentName}: React.FC = () => {
  const [fetching, setFetching] = useState<boolean>(false);
  const [detail, setDetail] = useState<any>();
  const route = useRouter();
  const routeParams: RouterParams = route.params

  const fetchData = async (refresh?: boolean) => {
    if (fetching) return // 防止重复请求
    setFetching(true)
    // TODO: fetching data
    setFetching(false)
  }

  useEffect(() => {
    // todo
    return () => {};
  }, []);

  useDidShow(() => {
    console.log(route.path);
    // fetchData();
  });

  useDidHide(() => {});

  // 分享给好友
  useShareAppMessage(() => {
    return {
      title: "页面标题",
      path: "页面路径",
      imageUrl: "分享图片PNG或JPG，尺寸5:4",
    };
  });

  // 分享到朋友圈
  useShareTimeline(() => {
    return {
      title: "页面标题",
      imageUrl: "分享图片PNG或JPG，尺寸350x350"
    };
  });

  // 下拉时
  usePullDownRefresh(async () => {
    // if (fetching) return Taro.stopPullDownRefresh();
    // Taro.showNavigationBarLoading();
    // Taro.stopPullDownRefresh();
    // await fetchData(true);
    // Taro.hideNavigationBarLoading();
  });

  // 触底时
  useReachBottom(() => {
    // if (hasMore(data)) {
    // 	fetchData();
    // }
  });

  // loading
  // if(!detail){
  //  return <PageLoading />
  // }

  return (
    <View className={styles.wrap}>
      <Text>{componentName} page {fetching ? '加载中' : 'hello'}! </Text>
    </View>
  );
};

export default {componentName};